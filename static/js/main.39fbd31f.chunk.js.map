{"version":3,"sources":["components/AllNotes.js","components/CompleteNotes.js","components/NoCompleteNotes.js","App.js","index.js"],"names":["AllNotes","tasks","changeState","className","map","note","type","checked","state","id","key","onChange","htmlFor","content","CompleteNotes","deleteNote","deleteAllNotes","filter","task","onClick","height","viewBox","width","xmlns","fill","d","value","NoCompleteNotes","App","useState","whatToShow","setWhatToShow","setTasks","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","addTask","document","getElementById","length","focus","alert","name","onKeyDownCapture","e","autoFocus","autoComplete","placeholder","index","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.39fbd31f.chunk.js","sourcesContent":["const AllNotes = ({ tasks, changeState }) => {\r\n  return (\r\n    <div className=\"notes-container\">\r\n      {tasks.map((note) => (\r\n        <div key={note.key} className=\"task-item\">\r\n          <div className=\"task-container\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={note.state}\r\n              id={`item-state${note.key}`}\r\n              onChange={() => changeState(note.key)}\r\n            />\r\n            <label htmlFor={`item-state${note.key}`}>{note.content}</label>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllNotes;\r\n","const CompleteNotes = ({ tasks, changeState, deleteNote, deleteAllNotes }) => {\r\n  return (\r\n    <div className=\"notes-container\">\r\n      {tasks\r\n        .filter((task) => task.state === true)\r\n        .map((note) => (\r\n          <div key={note.key} className=\"task-item\">\r\n            <div className=\"task-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={note.state}\r\n                id={`item-state${note.key}`}\r\n                onChange={() => changeState(note.key)}\r\n              />\r\n              <label htmlFor={`item-state${note.key}`}>{note.content}</label>\r\n            </div>\r\n            <i onClick={() => deleteNote(note.key)}>\r\n              <svg\r\n                className=\"delete\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 512 512\"\r\n                width=\"20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  fill=\"currentcolor\"\r\n                  d=\"m437.019531 74.980469c-48.351562-48.351563-112.640625-74.980469-181.019531-74.980469s-132.667969 26.628906-181.019531 74.980469c-48.351563 48.351562-74.980469 112.640625-74.980469 181.019531 0 68.382812 26.628906 132.667969 74.980469 181.019531 48.351562 48.351563 112.640625 74.980469 181.019531 74.980469s132.667969-26.628906 181.019531-74.980469c48.351563-48.351562 74.980469-112.636719 74.980469-181.019531 0-68.378906-26.628906-132.667969-74.980469-181.019531zm-70.292969 256.386719c9.761719 9.765624 9.761719 25.59375 0 35.355468-4.882812 4.882813-11.28125 7.324219-17.679687 7.324219s-12.796875-2.441406-17.679687-7.324219l-75.367188-75.367187-75.367188 75.371093c-4.882812 4.878907-11.28125 7.320313-17.679687 7.320313s-12.796875-2.441406-17.679687-7.320313c-9.761719-9.765624-9.761719-25.59375 0-35.355468l75.371093-75.371094-75.371093-75.367188c-9.761719-9.765624-9.761719-25.59375 0-35.355468 9.765624-9.765625 25.59375-9.765625 35.355468 0l75.371094 75.367187 75.367188-75.367187c9.765624-9.761719 25.59375-9.765625 35.355468 0 9.765625 9.761718 9.765625 25.589844 0 35.355468l-75.367187 75.367188zm0 0\"\r\n                />\r\n              </svg>\r\n            </i>\r\n          </div>\r\n        ))}\r\n      <input\r\n        type=\"button\"\r\n        value=\"Clear\"\r\n        className=\"button clear-all\"\r\n        onClick={deleteAllNotes}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteNotes;\r\n","const NoCompleteNotes = ({ tasks, changeState }) => {\r\n  return (\r\n    <div className=\"notes-container\">\r\n      {tasks\r\n        .filter((task) => task.state === false)\r\n        .map((note) => (\r\n          <div key={note.key} className=\"task-item\">\r\n            <div className=\"task-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={note.state}\r\n                id={`item-state${note.key}`}\r\n                onChange={() => changeState(note.key)}\r\n              />\r\n              <label htmlFor={`item-state${note.key}`}>{note.content}</label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoCompleteNotes;\r\n","import \"./styles/app.scss\";\nimport \"./styles/allNotes.scss\";\nimport AllNotes from \"./components/AllNotes\";\nimport CompleteNotes from \"./components/CompleteNotes\";\nimport NoCompleteNotes from \"./components/NoCompleteNotes\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [whatToShow, setWhatToShow] = useState(\"all\");\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"localTasks\");\n    data !== null ? setTasks(JSON.parse(data)) : setTasks([]);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"localTasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = () => {\n    const data = document.getElementById(\"input\").value;\n\n    if (data) {\n      setTasks([\n        ...tasks,\n        {\n          key: tasks.length,\n          state: false,\n          content: data,\n        },\n      ]);\n      document.getElementById(\"input\").value = \"\";\n      document.getElementById(\"input\").focus();\n    } else {\n      alert(\"Please write a task\");\n      document.getElementById(\"input\").focus();\n    }\n  };\n\n  const changeState = (key) => {\n    setTasks(\n      tasks.map((task) =>\n        task.key === key ? { ...task, state: !task.state } : task\n      )\n    );\n  };\n\n  const deleteNote = (key) => {\n    setTasks(\n      tasks\n        .filter((task) => task.key !== key)\n        .map((task) => (task.key > key ? { ...task, key: task.key - 1 } : task))\n    );\n  };\n\n  const deleteAllNotes = () => {\n    setTasks(\n      tasks\n        .filter((task) => task.state !== true)\n        .map((task, index) =>\n          task.key !== tasks.length ? { ...task, key: index } : task\n        )\n    );\n  };\n\n  return (\n    <div className=\"global-container\">\n      <h1 className=\"logo\" onClick={() => setWhatToShow(\"all\")}>\n        #ToDo\n      </h1>\n      <nav className=\"nav\">\n        <input\n          className=\"navbar-item\"\n          onClick={() => setWhatToShow(\"all\")}\n          type=\"radio\"\n          name=\"radio\"\n          id=\"radio\"\n          checked={whatToShow === \"all\" ? true : false}\n        />\n        <label htmlFor=\"radio\">All</label>\n        <input\n          className=\"navbar-item\"\n          onClick={() => setWhatToShow(\"complete\")}\n          type=\"radio\"\n          name=\"radio\"\n          id=\"radio2\"\n          checked={whatToShow === \"complete\" ? true : false}\n        />\n        <label htmlFor=\"radio2\">Complete</label>\n        <input\n          className=\"navbar-item\"\n          onClick={() => setWhatToShow(\"active\")}\n          type=\"radio\"\n          name=\"radio\"\n          id=\"radio3\"\n          checked={whatToShow === \"active\" ? true : false}\n        />\n        <label htmlFor=\"radio3\">Active</label>\n      </nav>\n      <div\n        className=\"form\"\n        onKeyDownCapture={(e) => (e.key === \"Enter\" ? addTask() : null)}\n      >\n        <span>\n          <input\n            type=\"text\"\n            id=\"input\"\n            autoFocus\n            autoComplete=\"off\"\n            placeholder=\"Write your task.\"\n            className=\"text\"\n          />\n          <div className=\"animation\"></div>\n        </span>\n        <input type=\"button\" value=\"Add\" onClick={addTask} className=\"button\" />\n      </div>\n\n      {whatToShow === \"all\" ? (\n        <AllNotes tasks={tasks} changeState={changeState} />\n      ) : whatToShow === \"complete\" ? (\n        <CompleteNotes\n          tasks={tasks}\n          changeState={changeState}\n          deleteNote={deleteNote}\n          deleteAllNotes={deleteAllNotes}\n        />\n      ) : (\n        <NoCompleteNotes tasks={tasks} changeState={changeState} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}